openapi: 3.1.0
info:
  title: Pet Arabia Stock & Prices API
  description: This is a Pet Arabia's Server based on the OpenAPI 3.0 specification. You can search for the products available to you and request for their qun
  contact:
    name: Isa AlDoseri
    email: it@petarabia.com
  version: '1.0'
jsonSchemaDialect: https://json-schema.org/draft/2020-12/schema
servers:
- url: http://127.0.0.1:8069/v1/stock
  variables: {}

webhooks:
  # Each webhook needs a name
  New Stock Update:
    post:
      tags:
        - Product
      requestBody:
        description: >-
          Stock count update for a product in a particular branch.
          The payload will be a JWT token. To decode it, use resources at https://jwt.io .
          Furthermore, to verify the signature of the token, use the API key as the secret key while decoding it.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StockUpdate"
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully

paths:
  /location:
    get:
      tags:
      - Location
      summary: Get List of Locations
      description: Return a list of Locations
      operationId: getLocations
      parameters: []
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    examples:
                      - 'locations'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Location'
                description: ''
                contentMediaType: application/json
        '401':
          $ref: '#/components/responses/Unauthorized'
      deprecated: false
      security:
      - api_key: []
    parameters: []
  /allproducts:
    get:
      tags:
      - Product
      summary: Get All Products
      description: Returns a list of Products
      operationId: getAllProducts
      parameters:
        - name: page
          in: query
          description: "To get list of products by page (each page only shows max 50 products)"
          required: false
          # style: form
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            text/html:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    examples:
                    - "products"
                  paging:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      num_of_pages:
                        type: integer
                        example: 2
                      num_of_items:
                        type: integer
                        example: 50
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                description: ''
                contentMediaType: application/json
        '400':
          $ref: '#/components/responses/TypeError'
        '401':
          $ref: '#/components/responses/Unauthorized'
      deprecated: false
      security:
      - api_key: []
    parameters: []
  /product:
    get:
      tags:
      - Product
      summary: Get Product By Barcode
      # description: Returns Products with all its details
      operationId: getProductByBarcode
      parameters:
        - name: barcode
          in: query
          description: "Barcode/SKU of Product"
          required: false
          # style: form
          schema:
            type: string
            example: "2300001000008"
      responses:
        '200':
          description: successful operation
          headers: {}
          content:
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
                description: ''
                contentMediaType: application/json
        '400':
          $ref: '#/components/responses/TypeError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      deprecated: false
      security:
      - api_key: []
    parameters: []
components:
  schemas:
    Barcodes:
      title: Barcodes
      type: object
      properties:
        barcodes:
          type: array
          items:
            type: string
            title: barcodes
            examples:
            - "99009910"
          description: ''
    Product:
      title: Product
      type: object
      properties:
        barcode:
          type: string
          examples:
          - '99009910'
        name:
          type: string
          examples:
          - Taste of the Wild
        price:
          type: number
          examples:
          - 32.5
        quantities:
          type: array
          items:
            $ref: '#/components/schemas/LocationQty'
          description: ''
    LocationQty:
      title: LocationQty
      type: object
      properties:
        location_id:
          type: string
          examples:
          - "Sanad"
        quantity:
          type: integer
          contentEncoding: int64
          examples:
          - 42
    Location:
      title: Location
      type: object
      properties:
        id:
          type: string
          examples:
          - Sanad
    StockUpdate:
      title: StockUpdate
      type: object
      description: The DECODED payload.
      properties:
        object:
          type: string
          description: 'stock_update'
          example: 'stock_update'
        data:
          type: object
          properties:
            barcode:
              type: string
              examples:
              - "009988"
            name:
              type: string
              example: 'Cat Food'
            price:
              type: number
              example: 7.4
            location_id:
              type: string
              example: "Sanad"
            quantity:
              type: integer
              example: 6
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
          
    ApiResponse:
      title: ApiResponse
      type: object
      properties:
        code:
          type: integer
          contentEncoding: int32
        type:
          type: string
        message:
          type: string
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
  responses:
    Unauthorized:
      description: Unauthorized
    NotFound:
      description: 'Not Found!'
    TypeError:
      description: 'Invalid Type Error'

security:
  - api_key: []
tags:
- name: Location
  description: Our Locations
- name: Product
  description: Everything about our products and their stock count
